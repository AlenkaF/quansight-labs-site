<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Quansight Labs</title><link>https://labs.quansight.org/</link><description>Quansight Labs site: blog, development and project overview</description><atom:link href="https://labs.quansight.org/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2020 &lt;a href="mailto:info@quansight.com"&gt;Quansight Labs Team&lt;/a&gt; </copyright><lastBuildDate>Mon, 24 Aug 2020 20:23:42 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>IPython reproducible builds</title><link>https://labs.quansight.org/blog/2020/08/ipython-reproducible-builds/</link><dc:creator>Matthias Bussonnier</dc:creator><description>&lt;div&gt;&lt;p&gt;Starting with IPython 7.16.1 (released in June 2020), you &lt;em&gt;should&lt;/em&gt; be able to recreate the sdist (&lt;code&gt;.tar.gz&lt;/code&gt;) and wheel
(&lt;code&gt;.whl&lt;/code&gt;), and get byte for byte identical result to the wheels published on PyPI. This is a critical step toward being able
to &lt;em&gt;trust&lt;/em&gt; your computing platforms, and a key component to improve efficiency of build and packaging platforms. It also
potentially impacts fast conda environment creation for users. The following goes into some reasons for why you should care.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/08/ipython-reproducible-builds/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>IPython</category><category>Labs</category><category>packaging</category><category>reproducible-builds</category><guid>https://labs.quansight.org/blog/2020/08/ipython-reproducible-builds/</guid><pubDate>Mon, 24 Aug 2020 12:00:00 GMT</pubDate></item><item><title>Introducing Versioned HDF5</title><link>https://labs.quansight.org/blog/2020/08/introducing-versioned-hdf5/</link><dc:creator>Quansight Labs Team</dc:creator><description>&lt;div&gt;&lt;p&gt;The problem of storing and manipulating large amounts of data is a challenge in
many scientific computing and industry applications. One of the standard data
models for this is &lt;a href="https://support.hdfgroup.org/HDF5/whatishdf5.html"&gt;HDF5&lt;/a&gt;,
an open technology that implements a hierarchical structure (similar to a
file-system structure) for storing large amounts of possibly heterogeneous data
within a single file. Data in an HDF5 file is organized into &lt;em&gt;groups&lt;/em&gt; and
&lt;em&gt;datasets&lt;/em&gt;; you can think about these as the folders and files in your local
file system, respectively. You can also optionally store metadata associated
with each item in a file, which makes this a self-describing and powerful data
storage model.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/08/introducing-versioned-hdf5/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>h5py</category><category>HDF5</category><guid>https://labs.quansight.org/blog/2020/08/introducing-versioned-hdf5/</guid><pubDate>Fri, 21 Aug 2020 13:00:00 GMT</pubDate></item><item><title>Designing with and for developers</title><link>https://labs.quansight.org/blog/2020/08/designing-with-and-for-developers/</link><dc:creator>Isabela Presedo-Floyd</dc:creator><description>&lt;div&gt;&lt;p&gt;Open source is notorious for lack of design presence, enough so that my search
to prove this fact has turned up nearly nothing. There’s many ways that such a
gap in community might manifest, but one that I never anticipated was working
with developers that had never interacted with a designer before.&lt;/p&gt;
&lt;p&gt;A quick note for context: I’m writing this as a UX/UI designer working with
open source projects for a little over a year. Because there are so many ways
design processes can happen (enough to warrant its own blog post), this post is
not intended to discuss design process deeply. My goal here is to pass on some
of what I’ve learned that helps me design in this unusual space in hopes that
it can help someone else. This post might seem most relevant for designers, but
I think this experience could be helpful for developers as well.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/08/designing-with-and-for-developers/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>design</category><guid>https://labs.quansight.org/blog/2020/08/designing-with-and-for-developers/</guid><pubDate>Wed, 05 Aug 2020 20:55:42 GMT</pubDate></item><item><title>Quansight Labs: what I learned in my first 3 months</title><link>https://labs.quansight.org/blog/2020/07/a-win-win-all-around/</link><dc:creator>Matti Picus</dc:creator><description>&lt;div&gt;&lt;p&gt;I joined Quansight at the beginning of April, splitting my time between
PyTorch (as part of a larger Quansight team) and contributing to Quansight Labs
supported community-driven projects in the Python scientific and data science
software stack, primarily to NumPy.  I have found my next home; the people, the
projects, and the atmosphere are an all around win-win for me and (I hope) for
the projects to which I contribute.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/07/a-win-win-all-around/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>funding</category><category>Labs</category><category>NumPy</category><category>PyTorch</category><guid>https://labs.quansight.org/blog/2020/07/a-win-win-all-around/</guid><pubDate>Tue, 21 Jul 2020 06:00:00 GMT</pubDate></item><item><title>Learn NixOS by turning a Raspberry Pi into a Wireless Router</title><link>https://labs.quansight.org/blog/2020/07/nixos-rpi-wifi-router/</link><dc:creator>Anthony Scopatz</dc:creator><description>&lt;div&gt;&lt;p&gt;I recently moved, and my new place has a relatively small footprint.  (Yes, I
moved during the COVID-19 pandemic. And yes, it was crazy.) I quickly realized
that was going to need a wireless router of some sort, or more formally, a wireless
access point (WAP). Using my Ubuntu laptop's "wireless hotspot" capability was a
nice temporary solution, but it had a few serious drawbacks.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/07/nixos-rpi-wifi-router/"&gt;Read more…&lt;/a&gt; (14 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>NixOS</category><category>Raspberry Pi</category><category>Wireless Router</category><guid>https://labs.quansight.org/blog/2020/07/nixos-rpi-wifi-router/</guid><pubDate>Sat, 11 Jul 2020 05:39:56 GMT</pubDate></item><item><title>Writing docs is not just writing docs</title><link>https://labs.quansight.org/blog/2020/07/writing-docs-is-not-just-writing-docs/</link><dc:creator>Juanita Gomez</dc:creator><description>&lt;div&gt;&lt;p&gt;I joined the &lt;a href="https://www.spyder-ide.org"&gt;Spyder&lt;/a&gt; team almost two years ago, and I never thought I was going to end up working on docs. Six months ago I started a project with &lt;a href="https://github.com/CAM-Gerlach"&gt;CAM Gerlach&lt;/a&gt; and &lt;a href="https://github.com/ccordoba12"&gt;Carlos Cordoba&lt;/a&gt; to improve Spyder’s documentation. At first, I didn’t actually understand how important docs are for software, especially for open source projects. However, during all this time I’ve learned how documentation has a huge impact on the open-source community and I’ve been thankful to have been able to do this. But, from the beginning, I asked myself “why am I the ‘right person’ for this?”&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/07/writing-docs-is-not-just-writing-docs/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>documentation</category><category>Labs</category><category>Spyder</category><guid>https://labs.quansight.org/blog/2020/07/writing-docs-is-not-just-writing-docs/</guid><pubDate>Tue, 07 Jul 2020 22:00:00 GMT</pubDate></item><item><title>Creating a Portable Python Environment from Imports</title><link>https://labs.quansight.org/blog/2020/06/portable-python-env/</link><dc:creator>Kim Pevey</dc:creator><description>&lt;div&gt;&lt;p&gt;Python environments provide sandboxes in which packages can be added.
Conda helps us deal with the requirements and dependencies of those packages.
Occasionally we find ourselves working in a constrained remote machine which
can make development challenging. Suppose we wanted to take our exact dev
environment on the remote machine and recreate it on our local machine.
While conda relieves the package dependency challenge, it can be hard to
reproduce the exact same environment.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/06/portable-python-env/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Conda</category><category>Conda-Pack</category><category>Depfinder</category><category>Python</category><guid>https://labs.quansight.org/blog/2020/06/portable-python-env/</guid><pubDate>Tue, 30 Jun 2020 19:39:56 GMT</pubDate></item><item><title>Ibis: an idiomatic flavor of SQL for Python programmers</title><link>https://labs.quansight.org/blog/2020/06/ibis-an-idiomatic-flavor-of-sql-for-python-programmers/</link><dc:creator>Tony Fast</dc:creator><description>&lt;div&gt;&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;img src="https://avatars3.githubusercontent.com/u/27442526?v=4" alt=""&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://www.ibis-project.org/"&gt;Ibis&lt;/a&gt; is a mature open-source project that has been in development for about 5 years; it currently has about 1350 stars on Github. It provides an interface to SQL for Python programmers and bridges the gap between remote storage &amp;amp; execution systems. These features provide authors the ability to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;write backend-independent &lt;a href="https://en.wikipedia.org/wiki/SQL"&gt;SQL&lt;/a&gt; expressions in &lt;a href="https://en.wikipedia.org/wiki/Python_(programming_language"&gt;Python&lt;/a&gt;);&lt;/li&gt;
&lt;li&gt;access different database connections (eg. &lt;a href="https://www.sqlite.org/index.html"&gt;SQLite&lt;/a&gt;, &lt;a href="https://www.omnisci.com/"&gt;OmniSci&lt;/a&gt;, &lt;a href="http://pandas.pydata.org/"&gt;Pandas&lt;/a&gt;); and&lt;/li&gt;
&lt;li&gt;confirm visually their SQL queries with &lt;a href="https://en.wikipedia.org/wiki/Directed_acyclic_graph"&gt;directed acyclic graphs (DAGs)&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/06/ibis-an-idiomatic-flavor-of-sql-for-python-programmers/"&gt;Read more…&lt;/a&gt; (11 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><guid>https://labs.quansight.org/blog/2020/06/ibis-an-idiomatic-flavor-of-sql-for-python-programmers/</guid><pubDate>Fri, 26 Jun 2020 19:20:54 GMT</pubDate></item><item><title>Highlights of the Ibis 1.3 release</title><link>https://labs.quansight.org/blog/2020/05/ibis-1.3-release/</link><dc:creator>Ivan Ogasawara</dc:creator><description>&lt;div&gt;&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;Ibis 1.3 was just released, after 8 months of development work, with 104 new commits from 16 unique contributors. What is new? In this blog post we will discuss some important features in this new version!&lt;/p&gt;
&lt;p&gt;First, if you are new to the Ibis framework world, you can check this &lt;a href="https://labs.quansight.org/blog/2019/07/ibis-python-data-analysis-productivity-framework/"&gt;blog post&lt;/a&gt; I wrote last year, with some introductory information about it.&lt;/p&gt;
&lt;p&gt;Some highlighted features of this new version are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Addition of a &lt;code&gt;PySpark&lt;/code&gt; backend&lt;/li&gt;
&lt;li&gt;Improvement of geospatial support&lt;/li&gt;
&lt;li&gt;Addition of &lt;code&gt;JSON&lt;/code&gt;, &lt;code&gt;JSONB&lt;/code&gt; and &lt;code&gt;UUID&lt;/code&gt; data types&lt;/li&gt;
&lt;li&gt;Initial support for &lt;code&gt;Python 3.8&lt;/code&gt; added and support for &lt;code&gt;Python 3.5&lt;/code&gt; dropped&lt;/li&gt;
&lt;li&gt;Added new backends and geospatial methods to the documentation&lt;/li&gt;
&lt;li&gt;Renamed the &lt;code&gt;mapd&lt;/code&gt; backend to &lt;code&gt;omniscidb&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/05/ibis-1.3-release/"&gt;Read more…&lt;/a&gt; (9 min remaining to read)&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description><category>Ibis</category><guid>https://labs.quansight.org/blog/2020/05/ibis-1.3-release/</guid><pubDate>Sat, 02 May 2020 03:30:00 GMT</pubDate></item><item><title>Thanking the people behind Spyder 4</title><link>https://labs.quansight.org/blog/2020/04/thanking-the-people-behind-spyder-4/</link><dc:creator>Carlos Córdoba</dc:creator><description>&lt;div&gt;&lt;p&gt;After more than three years in development and more than 5000 commits from 60 authors around the world, Spyder 4 finally saw the light on December 5, 2019!
I decided to wait until now to write a blogpost about it because shortly after the initial release, we found several critical performance issues and some regressions with respect to Spyder 3, most of which are fixed now in &lt;a href="https://github.com/spyder-ide/spyder/releases/tag/v4.1.2"&gt;version 4.1.2&lt;/a&gt;, released on April 3rd 2020.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/04/thanking-the-people-behind-spyder-4/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Labs</category><category>Spyder</category><guid>https://labs.quansight.org/blog/2020/04/thanking-the-people-behind-spyder-4/</guid><pubDate>Tue, 28 Apr 2020 06:00:00 GMT</pubDate></item></channel></rss>