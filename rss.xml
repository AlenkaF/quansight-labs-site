<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Quansight Labs</title><link>https://labs.quansight.org/</link><description>Quansight Labs site: blog, development and project overview</description><atom:link href="https://labs.quansight.org/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents ¬© 2020 &lt;a href="mailto:info@quansight.com"&gt;Quansight Labs Team&lt;/a&gt; </copyright><lastBuildDate>Thu, 12 Mar 2020 15:51:57 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>uarray: GSoC Participation</title><link>https://labs.quansight.org/blog/2020/03/uarray-gsoc-participation/</link><dc:creator>Hameer Abbasi</dc:creator><description>&lt;div&gt;&lt;p&gt;I'm pleased to announce that &lt;code&gt;uarray&lt;/code&gt; is participating in GSoC '20 as a sub-organization under the umbrella of the Python Software Foundation. Our ideas page is up &lt;a href="https://uarray.org/en/latest/gsoc/2020/ideas.html"&gt;here&lt;/a&gt;, go take a look and see if you (or someone you know) is interested in participating, either as a student or as a mentor.&lt;/p&gt;
&lt;p&gt;Prasun Anand and Peter Bell and myself will be mentoring, and we plan to take a maximum of two students, unless more community mentors show up.&lt;/p&gt;
&lt;p&gt;There have been &lt;a href="https://github.com/Quansight-Labs/uarray/pulls?q=is%3Apr+is%3Aclosed"&gt;quite&lt;/a&gt; &lt;a href="https://github.com/Quansight-Labs/unumpy/pulls?q=is%3Apr+is%3Aclosed"&gt;a few&lt;/a&gt; &lt;a href="https://github.com/Quansight-Labs/udiff/pulls?q=is%3Apr+is%3Aclosed"&gt;pull requests&lt;/a&gt; already to qualify from prospective students, some even going as far as to begin the work described in the idea they plan to work on.&lt;/p&gt;
&lt;p&gt;We're quite excited by the number of students who have shown an interest in participating, and we look forward to seeing excellent applications! What's more exciting, though, are some of the first contributions from people not currently at Quansight, in the true spirit of open-source software!&lt;/p&gt;&lt;/div&gt;</description><category>Big data</category><category>NumPy</category><category>SciPy</category><category>Tensors</category><category>uarray</category><guid>https://labs.quansight.org/blog/2020/03/uarray-gsoc-participation/</guid><pubDate>Thu, 12 Mar 2020 12:39:00 GMT</pubDate></item><item><title>Planned architectural work for PyData/Sparse</title><link>https://labs.quansight.org/blog/2020/02/whats-next-for-pydatasparse/</link><dc:creator>Hameer Abbasi</dc:creator><description>&lt;div&gt;&lt;h2&gt;What have we been doing so far? ü§î&lt;/h2&gt;
&lt;h3&gt;Research üìö&lt;/h3&gt;
&lt;p&gt;A lot of behind the scenes work has been taking place on PyData/Sparse. Not so much in terms of code, more in terms of research and community/team building. I've more-or-less decided to use the structure and the research behind the &lt;a href="https://github.com/tensor-compiler/taco"&gt;Tensor Algebra Compiler&lt;/a&gt;, the work of Fredrik Kjolstad and his collaborators at MIT. üôáüèª‚Äç‚ôÇÔ∏è To this end, I've read/watched the following talks and papers:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/02/whats-next-for-pydatasparse/"&gt;Read more‚Ä¶&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Big data</category><category>NumPy</category><category>SciPy</category><category>Sparse</category><category>Tensors</category><guid>https://labs.quansight.org/blog/2020/02/whats-next-for-pydatasparse/</guid><pubDate>Wed, 11 Mar 2020 11:30:00 GMT</pubDate></item><item><title>My Unexpected Dive into Open-Source Python</title><link>https://labs.quansight.org/blog/2020/02/my-unexpected-dive-into-open-source-python/</link><dc:creator>Mars Lee</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;img alt="Header Image" src="https://labs.quansight.org/images/codesprite-comics/My-Unexpected-Dive-Into-Open-Source-Python-Illustration.png"&gt;
&lt;em&gt;Header illustration by author, Mars Lee&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I'm very happy to announce that I have joined &lt;a href="https://www.quansight.com/"&gt;Quansight&lt;/a&gt; as a front-end developer and designer! It was a happy coincidence how I joined- the intersection of my skills and the open source community's expanded vision.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/02/my-unexpected-dive-into-open-source-python/"&gt;Read more‚Ä¶&lt;/a&gt; (4 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Labs</category><category>PyData</category><guid>https://labs.quansight.org/blog/2020/02/my-unexpected-dive-into-open-source-python/</guid><pubDate>Fri, 21 Feb 2020 18:38:07 GMT</pubDate></item><item><title>Creating the ultimate terminal experience in Spyder 4 with Spyder-Terminal</title><link>https://labs.quansight.org/blog/2020/02/creating-the-ultimate-terminal-experience-in-Spyder-4-with-Spyder-Terminal/</link><dc:creator>Stephannie Jimenez</dc:creator><description>&lt;div&gt;&lt;p&gt;The &lt;a href="https://github.com/spyder-ide/Spyder-Terminal"&gt;Spyder-Terminal project&lt;/a&gt; is revitalized! The new 0.3.0 version adds numerous features that improves the user experience, and enhances compatibility with the latest Spyder 4 release, in part thanks to the improvements made in the &lt;a href="https://xtermjs.org/"&gt;xterm.js&lt;/a&gt; project.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2020/02/creating-the-ultimate-terminal-experience-in-Spyder-4-with-Spyder-Terminal/"&gt;Read more‚Ä¶&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Labs</category><category>Spyder</category><guid>https://labs.quansight.org/blog/2020/02/creating-the-ultimate-terminal-experience-in-Spyder-4-with-Spyder-Terminal/</guid><pubDate>Fri, 14 Feb 2020 19:00:00 GMT</pubDate></item><item><title>metadsl PyData talk</title><link>https://labs.quansight.org/blog/2019/12/metadsl-talk/</link><dc:creator>Saul Shanabrook</dc:creator><description>&lt;div&gt;&lt;h2&gt;metadsl PyData talk&lt;/h2&gt;
&lt;p&gt;PyData NYC just ended and I thought it would be good to collect my thoughts on &lt;a href="https://metadsl.readthedocs.io/en/latest/"&gt;&lt;code&gt;metadsl&lt;/code&gt;&lt;/a&gt; based on the many conversations I had there surrounding it. This is a rather long post, so if you are just looking for some code &lt;a href="https://mybinder.org/v2/gh/Quansight-Labs/metadsl/959575fe6d6df884b987954c017dfa7f7c99b61a?urlpath=lab/tree/explorations/2109.12.07%20PyData%20Talk.ipynb"&gt;&lt;strong&gt;here is a Binder link for my talk&lt;/strong&gt;&lt;/a&gt;. Also, here is the talk I gave a month or so later on the same topic in Austin:&lt;/p&gt;
&lt;iframe width="560" height="315" src="https://www.youtube-nocookie.com/embed/cdWdTPL7zrg" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3&gt;What is &lt;code&gt;metadsl&lt;/code&gt;?&lt;/h3&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;metadsl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Expression&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="nd"&gt;@metadsl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;
   &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__add__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;other&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
       &lt;span class="o"&gt;...&lt;/span&gt;

   &lt;span class="nd"&gt;@metadsl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;expression&lt;/span&gt;
   &lt;span class="nd"&gt;@classmethod&lt;/span&gt;
   &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;from_int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;cls&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
       &lt;span class="o"&gt;...&lt;/span&gt;


&lt;span class="nd"&gt;@metadsl&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rule&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;add_zero&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Number&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
   &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;Number&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
   &lt;span class="k"&gt;yield&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;Number&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;from_int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2019/12/metadsl-talk/"&gt;Read more‚Ä¶&lt;/a&gt; (13 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Labs</category><category>metadsl</category><guid>https://labs.quansight.org/blog/2019/12/metadsl-talk/</guid><pubDate>Tue, 24 Dec 2019 11:00:00 GMT</pubDate></item><item><title>Variable Explorer improvements in Spyder 4</title><link>https://labs.quansight.org/blog/2019/11/variable-explorer-improvements-in-Spyder-4/</link><dc:creator>Daniel Althviz</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;a href="https://www.spyder-ide.org/"&gt;Spyder&lt;/a&gt; 4 will be released very soon with lots of interesting new features that you'll want to check out, reflecting years of effort by the team to improve the user experience. In this post, we will be talking about the improvements made to the Variable Explorer.&lt;/p&gt;
&lt;p&gt;These include the brand new Object Explorer for inspecting arbitrary Python variables, full support for MultiIndex dataframes with multiple dimensions, and the ability to filter and search for variables by name and type, and much more.&lt;/p&gt;
&lt;p&gt;It is important to mention that several of the above improvements were made possible through integrating the work of two other projects. Code from &lt;a href="https://github.com/TabViewer/gtabview"&gt;gtabview&lt;/a&gt; was used to implement the multi-dimensional Pandas indexes, while &lt;a href="https://github.com/titusjan/objbrowser"&gt;objbrowser&lt;/a&gt; was the foundation of the new Object Explorer.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2019/11/variable-explorer-improvements-in-Spyder-4/"&gt;Read more‚Ä¶&lt;/a&gt; (7 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Labs</category><category>Spyder</category><guid>https://labs.quansight.org/blog/2019/11/variable-explorer-improvements-in-Spyder-4/</guid><pubDate>Fri, 29 Nov 2019 01:00:00 GMT</pubDate></item><item><title>A new grant for NumPy and OpenBLAS!</title><link>https://labs.quansight.org/blog/2019/11/numpy-openblas-CZI-grant/</link><dc:creator>Ralf Gommers</dc:creator><description>&lt;div&gt;&lt;p&gt;I'm very pleased to announce that NumPy and OpenBLAS just received a $195,000 grant from
the Chan Zuckerberg Initiative, through its
&lt;a href="https://chanzuckerberg.com/rfa/essential-open-source-software-for-science/"&gt;Essential Open Source Software for Science&lt;/a&gt;
(EOSS) program! This is good news for both projects, and I'm particularly excited about
the types of activities we'll be undertaking, what this will mean in terms of growing
the community, and to be part of the first round of funded projects of this visionary program.&lt;/p&gt;
&lt;h3&gt;The program&lt;/h3&gt;
&lt;p&gt;The &lt;a href="https://chanzuckerberg.com/newsroom/chan-zuckerberg-initiative-awards-5-million-for-open-source-software-projects-essential-to-science/"&gt;press release&lt;/a&gt;
gives a high level overview of the program, and the
&lt;a href="https://chanzuckerberg.com/eoss/proposals"&gt;grantee website&lt;/a&gt; lists the 32 successful applications.
Other projects that got funded include SciPy and Matplotlib (it's the very first
significant funding for both projects!), Pandas, Zarr, scikit-image, JupyterHub, and
Bioconda - we're in good company!&lt;/p&gt;
&lt;p&gt;Nicholas Sofroniew and Dario Taborelli, two of the people driving the EOSS program, wrote
a blog post that's well worth reading about the motivations for starting this program and
the 42 projects that applied and got funded:
&lt;a href="https://medium.com/@cziscience/4ab7f8d4f5dd"&gt;The Invisible Foundations of Biomedicine&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2019/11/numpy-openblas-CZI-grant/"&gt;Read more‚Ä¶&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>community</category><category>funding</category><category>Labs</category><category>NumPy</category><category>OpenBLAS</category><guid>https://labs.quansight.org/blog/2019/11/numpy-openblas-CZI-grant/</guid><pubDate>Thu, 14 Nov 2019 20:00:00 GMT</pubDate></item><item><title>File management improvements in Spyder4</title><link>https://labs.quansight.org/blog/2019/11/File-management-improvements-in-Spyder4/</link><dc:creator>Juanita Gomez &amp; Gonzalo Pe√±a</dc:creator><description>&lt;div&gt;&lt;p&gt;Version 4.0 of &lt;a href="https://www.spyder-ide.org/"&gt;Spyder&lt;/a&gt;‚Äîa powerful Python IDE designed for scientists, engineers and data analysts‚Äîis almost ready! It has been in the making for well over two years, and it contains lots of interesting new features. We will focus on the Files pane in this post, where we've made several improvements to the interface and file management tools. &lt;/p&gt;
&lt;h3&gt;Simplified interface&lt;/h3&gt;
&lt;p&gt;In order to simplify the Files pane's interface, the columns corresponding to size and kind are hidden by default. To change which columns are shown, use the top-right pane menu or right-click the header directly.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Pane Menu" src="https://labs.quansight.org/images/spyder-files/pane-menu.png"&gt;
&lt;/p&gt;&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2019/11/File-management-improvements-in-Spyder4/"&gt;Read more‚Ä¶&lt;/a&gt; (7 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>Labs</category><category>Spyder</category><guid>https://labs.quansight.org/blog/2019/11/File-management-improvements-in-Spyder4/</guid><pubDate>Tue, 12 Nov 2019 17:00:00 GMT</pubDate></item><item><title>uarray: Attempting to move the ecosystem forward</title><link>https://labs.quansight.org/blog/2019/11/uarray-attempting-to-move-the-ecosystem-forward/</link><dc:creator>Hameer Abbasi</dc:creator><description>&lt;div&gt;&lt;p&gt;There comes a time in every project where most technological hurdles have been surpassed, and its adoption is a social problem. I believe &lt;code&gt;uarray&lt;/code&gt; and &lt;code&gt;unumpy&lt;/code&gt; had reached such a state, a month ago.&lt;/p&gt;
&lt;p&gt;I then proceeded, along with &lt;a href="https://github.com/rgommers"&gt;Ralf Gommers&lt;/a&gt; and &lt;a href="https://github.com/peterbell10"&gt;Peter Bell&lt;/a&gt; to write &lt;a href="https://numpy.org/neps/nep-0031-uarray.html"&gt;NumPy Enhancement Proposal 31&lt;/a&gt; or NEP-31. This generated a lot of excellent feedback on the structure and the nuances of the proposal, which you can read both on the &lt;a href="https://numpy.org/neps/nep-0031-uarray.html"&gt;pull request&lt;/a&gt; and on the &lt;a href="https://mail.python.org/pipermail/numpy-discussion/2019-September/079961.html"&gt;mailing list discussion&lt;/a&gt;, which led to a lot of restructuring in the contents and the structure of the NEP, but very little in the actual proposal. I take full responsibility for this: I have a bad tendency to assume everyone knows what I'm thinking. Thankfully, I'm not alone in this: It's a &lt;a href="https://en.wikipedia.org/wiki/Curse_of_knowledge"&gt;known psychological phenomenon&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2019/11/uarray-attempting-to-move-the-ecosystem-forward/"&gt;Read more‚Ä¶&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://labs.quansight.org/blog/2019/11/uarray-attempting-to-move-the-ecosystem-forward/</guid><pubDate>Sun, 10 Nov 2019 05:28:00 GMT</pubDate></item><item><title>Quansight Labs Work Update for September, 2019</title><link>https://labs.quansight.org/blog/2019/10/quansight-labs-work-update-for-september-2019/</link><dc:creator>Aaron Meurer</dc:creator><description>&lt;div&gt;&lt;p&gt;As of November, 2018, I have been working at
&lt;a href="https://www.quansight.com/"&gt;Quansight&lt;/a&gt;. Quansight is a new startup founded by
the same people who started Anaconda, which aims to connect companies and open
source communities, and offers consulting, training, support and mentoring
services. I work under the heading of &lt;a href="https://www.quansight.com/labs"&gt;Quansight
Labs&lt;/a&gt;. Quansight Labs is a public-benefit
division of Quansight. It provides a home for a "PyData Core Team" which
consists of developers, community managers, designers, and documentation
writers who build open-source technology and grow open-source communities
around all aspects of the AI and Data Science workflow.&lt;/p&gt;
&lt;p&gt;My work at Quansight is split between doing open source consulting for various
companies, and working on SymPy.
&lt;a href="https://www.sympy.org/en/index.html"&gt;SymPy&lt;/a&gt;, for those who do not know, is a
symbolic mathematics library written in pure Python. I am the lead maintainer
of SymPy.&lt;/p&gt;
&lt;p&gt;In this post, I will detail some of the open source work that I have done
recently, both as part of my open source consulting, and as part of my work on
SymPy for Quansight Labs.&lt;/p&gt;
&lt;h3&gt;Bounds Checking in Numba&lt;/h3&gt;
&lt;p&gt;As part of work on a client project, I have been working on contributing code
to the &lt;a href="https://numba.pydata.org"&gt;numba&lt;/a&gt; project. Numba is a just-in-time
compiler for Python. It lets you write native Python code and with the use of
a simple &lt;code&gt;@jit&lt;/code&gt; decorator, the code will be automatically sped up using LLVM.
This can result in code that is up to 1000x faster in some cases:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://labs.quansight.org/blog/2019/10/quansight-labs-work-update-for-september-2019/"&gt;Read more‚Ä¶&lt;/a&gt; (7 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><guid>https://labs.quansight.org/blog/2019/10/quansight-labs-work-update-for-september-2019/</guid><pubDate>Mon, 07 Oct 2019 05:00:00 GMT</pubDate></item></channel></rss>